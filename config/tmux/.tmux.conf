# syntax:ssHash

set -g prefix2 `      # backtick is pretty handy in many cases
bind ` send-prefix -2 # `` sends a ` in case you need one

# >> settings

set -g mode-keys vi
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
set -g mouse on
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1
set -g display-panes-time 4000
setw -g monitor-activity on
set -g visual-activity on
set -g visual-bell on
set -g status-position top
set -sg escape-time 0
set -g set-titles on

# use hostname (@#h) in set-titles-string with SSH
if 'test -n "$SSH_CLIENT"' \
  'set -g set-titles-string "[tmux] [#S:#I.#P @#h] #W"' \
  'set -g set-titles-string "[tmux] [#S:#I.#P] #W"'

# >> theme

# load status bar theme (disabled in favor of tpm managed theme)
# run '~/.dotfiles/config/tmux/theme.sh'

# >> window management

# comma, period to move between windows
bind -r , previous-window   # move window one position to the left
bind -r . next-window       # move window one position to the right

# shift + arrow to switch windows (no prefix needed)
bind -n S-Left  previous-window
bind -n S-Right next-window

# make up for the default rename-window shortcut 'prefix-comma'
bind ^ command-prompt -I "#W" "rename-window -- '%%'"

# make up for the default 'select-layout -E' shortcut 'prefix-E'
bind e select-layout -E

# middle click on a window name in status bar to kill it
bind -n MouseDown2Status kill-window

# middle click in a pane to paste
bind -n MouseDown2Pane run -b "exec </dev/null; xclip -o | awk 1 ORS=' ' | tmux load-buffer - ; tmux paste-buffer"

# swap & move windows & panes
bind W choose-tree -Zw "swap-window -t '%%'"
bind Q choose-tree -Zw "swap-pane -t '%%'"
bind E choose-tree -Zw "move-pane -t '%%'"
bind M-w command-prompt -p "Swap Current Window To? (e.g 3; 4; session_name:5)" "swap-window -t '%%'"
bind M-q command-prompt -p "Swap Current Pane To? (e.g 2.0; session_name:4.0)" "swap-pane -t '%%'"
bind M-e command-prompt -p "Move Current Pane To? (e.g 3.1; session_name:6.0)" "move-pane -t '%%'"

# >> copy & paste

# use Vi-style keys for copying and pasting
bind v copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind p paste-buffer

# PageUp, PageDown support
bind -n PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind -T copy-mode-vi PPage send-keys -X page-up
bind -T copy-mode-vi NPage send-keys -X page-down

# mouse wheel support
bind -n WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -n WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind -T copy-mode-vi WheelUpPane send-keys -X halfpage-up
bind -T copy-mode-vi WheelDownPane send-keys -X halfpage-down

# >> synchronize commands to panes/windows/sessions

# send the same command to all panes in the same window
bind a command-prompt -p 'Command to all panes in this window:' \
  "run \"tmux list-panes -F '##{pane_index}' | xargs -I PANE \
    tmux send-keys -t PANE '%1' Enter\""

# alternative to using the above "a" binding is to enable pane synchronization,
# type the command you want to execute in all panes in the same window and disable
# pane synchronization. So it would be: A <type the command RET> A
bind A if -F '#{pane_synchronized}' \
  'setw synchronize-panes off; display "Pane synchronization turned off."' \
  'setw synchronize-panes on; display "Pane synchronization turned on."'

# send the same command to all panes/windows in the specified session
# inspired from http://stackoverflow.com/questions/9250884/send-command-to-all-window-in-tmux
bind C-a command-prompt -p 'Session:,Command:' \
  "run \"tmux list-windows -t %1 -F '%1:##{window_index}' | xargs -I SESS_WIN \
    tmux list-panes -t SESS_WIN -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
    tmux send-keys -t SESS_WIN_PANE '%2' Enter\""

# send the same command to all panes/windows/sessions
bind C-A command-prompt -p "Command to all panes/windows/sessions:" \
  "run \"tmux list-sessions -F '##{session_name}' | xargs -I SESS \
    tmux list-windows -t SESS -F 'SESS:##{window_index}' | xargs -I SESS_WIN \
    tmux list-panes -t SESS_WIN -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
    tmux send-keys -t SESS_WIN_PANE '%1' Enter\""

# >> vim integration

# smart pane switching with awareness of vim splits
# see: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'

# use Alt-vim keys without prefix key to switch panes
bind -n M-h if "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-j if "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-k if "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-l if "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if "$is_vim" "send-keys C-\\" "select-pane -l"

# use Alt-arrow keys without prefix key to switch panes
bind -n M-Left if "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-Right if "$is_vim" "send-keys C-l" "select-pane -R"
bind -n M-Up if "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-Down if "$is_vim" "send-keys C-j" "select-pane -D"

# >> misc shortcuts

# toggle the status line shown between top & bottom
bind B set status-position

# command prompt
# move focus to command prompt. tmux commands can be entered there directly
# without using the `tmux` prefix and it also supports auto-complete.
bind -n M-x command-prompt # default command-prompt binding "PREFIX :" also works

# loads a man page in a new pane
bind M-- command-prompt -p "Show man page of:" "split-window -v 'exec man %%'"
bind M-\\ command-prompt -p "Show man page of:" "split-window -h 'exec man %%'"

# runs ssh in a new window, you might want connect instead
bind C-\\ command-prompt -p "ssh to:" "new-window -n %1 'ssh %1'"

# >> list of plugins
set -g @tpm_plugins '                 \
  caiogondim/maglev                   \
  tmux-plugins/tpm                    \
  tmux-plugins/tmux-sensible          \
  tmux-plugins/tmux-resurrect         \
  tmux-plugins/tmux-continuum         \
  tmux-plugins/tmux-copycat           \
  tmux-plugins/tmux-yank              \
  tmux-plugins/tmux-pain-control      \
  tmux-plugins/tmux-open              \
  tmux-plugins/tmux-battery           \
  tmux-plugins/tmux-cpu               \
  tmux-plugins/tmux-prefix-highlight  \
  tmux-plugins/tmux-sessionist        \
  tmux-plugins/tmux-logging           \
  tmux-plugins/tmux-sidebar           \
  tmux-plugins/tmux-fpp               \
  tmux-plugins/tmux-urlview           \
'

# plugin configs
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# automatic tpm installation
if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# initialize tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# local configs
if 'test -f ~/.tmux.conf.local' 'source ~/.tmux.conf.local'
