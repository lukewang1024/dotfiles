# Basic Settings
set hidden true
set color256 true
set drawbox true
set icons true
set ignorecase true

cmd open ${{
  case $(file --mime-type "$f" -bL) in
    text/*|application/json) $EDITOR "$f" ;;
    video/*|image/*/application/pdf) xdg-open "$f" & disown ;;
    *) xdg-open "$f" ;;
  esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"; do
    chmod $ans $file
  done
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
    *.zip) unzip "$f" ;;
    *.tar.gz) tar -xzvf "$f" ;;
    *.tar.bz2) tar -xjvf "$f" ;;
    *.tar) tar -xvf "$f" ;;
    *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Trash cli bindings
cmd trash ${{
  for file in $fx: do
    trash-put "$(basename "$file")"
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}
